<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="daemon_8cpp" kind="file">
    <compoundname>daemon.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">syslog.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="6">
        <label>sys/stat.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="3">
        <label>syslog.h</label>
      </node>
      <node id="4">
        <label>sys/types.h</label>
      </node>
      <node id="2">
        <label>unistd.h</label>
      </node>
      <node id="0">
        <label>src/daemon.cpp</label>
        <link refid="daemon.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="daemon_8cpp_1ac04ce74109b413ea192c41d9aa8e5126" prot="public" static="no">
        <name>CHILD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" line="9" column="9" bodyfile="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="daemon_8cpp_1a8fe83ac76edc595f6b98cd4a4127aed5" prot="public" static="no">
        <name>ERROR</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" line="10" column="9" bodyfile="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="daemon_8cpp_1a0015ad7506f07fbd45b1a3037ee4dc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void start_daemon</definition>
        <argsstring>(const char *log_name, int facility)</argsstring>
        <name>start_daemon</name>
        <param>
          <type>const char *</type>
          <declname>log_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>facility</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" line="12" column="1" bodyfile="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" bodystart="12" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="daemon_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" line="45" column="1" bodyfile="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp" bodystart="45" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syslog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHILD<sp/>0</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ERROR<sp/>-1</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="daemon_8cpp_1a0015ad7506f07fbd45b1a3037ee4dc3e" kindref="member">start_daemon</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*log_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>facility)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/>pid;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Elternprozeß<sp/>beenden,<sp/>somit<sp/>haben<sp/>wir<sp/>einen<sp/>Waisen</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>dessen<sp/>sie<sp/>jetzt<sp/>vorerst<sp/>init<sp/>annimmt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pid<sp/>=<sp/>fork())<sp/>!=<sp/><ref refid="daemon_8cpp_1ac04ce74109b413ea192c41d9aa8e5126" kindref="member">CHILD</ref>)<sp/>exit(0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Unser<sp/>Kindprozess<sp/>wird<sp/>zum<sp/>Session-Führer.<sp/>Mißlingt<sp/>dies,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>kann<sp/>der<sp/>Fehler<sp/>daran<sp/>liegen<sp/>das<sp/>der<sp/>Prozeß<sp/>bereits<sp/>Sessionführer</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>ist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsid()<sp/>==<sp/><ref refid="daemon_8cpp_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>kann<sp/>nicht<sp/>Session-Führer<sp/>werden!\n&quot;</highlight><highlight class="normal">,log_name);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gründe<sp/>für<sp/>das<sp/>Root-Wurzelverzeichnis:</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>+core-Datei<sp/>wird<sp/>im<sp/>aktuellen<sp/>Arbeitsverzeichnis<sp/>hinterlegt</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>+Damit<sp/>bei<sp/>Beendigung<sp/>mit<sp/>umount<sp/>das<sp/>Dateisystem<sp/>sicher<sp/>abgehängt</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>werde<sp/>kann<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>chdir(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Damit<sp/>wir<sp/>nicht<sp/>die<sp/>Bitmaske<sp/>vom<sp/>Elternprozeß<sp/>erben<sp/>bzw.<sp/>diese</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>bleiben,<sp/>stellen<sp/>wir<sp/>diese<sp/>auf<sp/>0*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>umask(0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Wir<sp/>schließen<sp/>alle<sp/>geöffneten<sp/>Filedeskriptoren....*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=sysconf(_SC_OPEN_MAX);<sp/>i&gt;0;<sp/>i--)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(i);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Da<sp/>unser<sp/>Dämonprozeß<sp/>selbst<sp/>kein<sp/>Terminal<sp/>für<sp/>die<sp/>Ausgabe<sp/>hat....*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>openlog(log_name,<sp/>LOG_PID,<sp/>facility);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="daemon_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;meinDaemon&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daemon_8cpp_1a0015ad7506f07fbd45b1a3037ee4dc3e" kindref="member">start_daemon</ref>(name.c_str(),<sp/>LOG_USER);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Enlossschleifen:<sp/>Hier<sp/>sollte<sp/>nun<sp/>der<sp/>Code<sp/>für<sp/>den</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Daemon<sp/>stehen,<sp/>was<sp/>immer<sp/>er<sp/>auch<sp/>tun<sp/>soll.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Bei<sp/>Fehlermeldungen<sp/>Beispiesweise:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>if(dies_ist_Passiert)</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>syslog(LOG_WARNING,<sp/>&quot;dies_ist_Passiert&quot;);</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>else<sp/>if(das_ist_Passiert)</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>syslog(LOG_INFO,<sp/>&quot;das_ist_Passiert&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/alexandergugu/Desktop/HahnProjekt/Linux_Projekt/src/daemon.cpp"/>
  </compounddef>
</doxygen>
